{"ast":null,"code":"import _defineProperty from \"D:\\\\React\\\\Udemy\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { UserActionTypes } from './user.type';\nconst INITIAL_STATE = {\n  currentUser: null\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case UserActionTypes.SET_CURRENT_USER:\n      return _objectSpread({}, state, {\n        currentUser: action.payload\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/React/Udemy/crwn-clothing/client/src/redux/user/user.reducer.js"],"names":["UserActionTypes","INITIAL_STATE","currentUser","state","action","type","SET_CURRENT_USER","payload"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,aAAhC;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE;AADK,CAAtB;AAIA,gBAAe,CAACC,KAAK,GAAGF,aAAT,EAAwBG,MAAxB,KAAmC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKL,eAAe,CAACM,gBAArB;AACI,+BACOH,KADP;AAEID,QAAAA,WAAW,EAAEE,MAAM,CAACG;AAFxB;;AAIJ;AACI,aAAOJ,KAAP;AAPR;AASH,CAVD","sourcesContent":["import { UserActionTypes } from './user.type'\r\nconst INITIAL_STATE = {\r\n    currentUser: null\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case UserActionTypes.SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}