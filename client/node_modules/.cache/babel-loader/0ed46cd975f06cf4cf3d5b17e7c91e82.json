{"ast":null,"code":"import ShopActionTypes from './shop.type';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errMsg => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errMsg\n});\nexport const fetchCollecitonStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"colletions\");\n    dispatch(fetchCollectionStart()); // because of redux-thunk\n\n    collectionRef.get().then(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["D:/React/Udemy/crwn-clothing/client/src/redux/shop/shop.action.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errMsg","FETCH_COLLECTIONS_FAILURE","fetchCollecitonStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,aAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACvCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADiB,CAAP,CAA7B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACtDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,yBADgC;AAEtDC,EAAAA,OAAO,EAAEF;AAF6C,CAAL,CAA9C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,MAAM,KAAK;AAC9CP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,yBADwB;AAE9CH,EAAAA,OAAO,EAAEE;AAFqC,CAAL,CAAtC;AAKP,OAAO,MAAME,yBAAyB,GAAG,MAAM;AAC3C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,YAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,oBAAoB,EAArB,CAAR,CAFe,CAEkB;;AACjCY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMZ,cAAc,GAAGL,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACH,KAHD,EAGGa,KAHH,CAGSC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAH1B;AAIH,GAPD;AAQH,CATM","sourcesContent":["import ShopActionTypes from './shop.type'\r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\r\nexport const fetchCollectionStart = () => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\r\n})\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap\r\n})\r\n\r\nexport const fetchCollectionsFailure = errMsg => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errMsg\r\n})\r\n\r\nexport const fetchCollecitonStartAsync = () => {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection(\"colletions\");\r\n        dispatch(fetchCollectionStart()) // because of redux-thunk\r\n        collectionRef.get().then(async snapshot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            dispatch(fetchCollectionsSuccess(collectionsMap))\r\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}