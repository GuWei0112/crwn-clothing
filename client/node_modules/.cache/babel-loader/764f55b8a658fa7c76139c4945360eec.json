{"ast":null,"code":"import _defineProperty from \"D:\\\\React\\\\Udemy\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport CartActionTypes from './cart.type';\nimport { addItemToCart, removeItemFromCart } from './cart.util';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\nexport default ((state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/React/Udemy/crwn-clothing/client/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","removeItemFromCart","INITIAL_STATE","hidden","cartItems","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","cartItem","id"],"mappings":";;;;;;AAAA,OAAOA,eAAP,MAA4B,aAA5B;AACA,SAASC,aAAT,EAAuBC,kBAAvB,QAAiD,aAAjD;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,MAAM,EAAE,IADU;AAElBC,EAAAA,SAAS,EAAE;AAFO,CAAtB;AAKA,gBAAe,CAACC,KAAK,GAAGH,aAAT,EAAwBI,MAAxB,KAAmC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,eAAe,CAACS,kBAArB;AACI,+BAAYH,KAAZ;AAAmBF,QAAAA,MAAM,EAAE,CAACE,KAAK,CAACF;AAAlC;;AACJ,SAAKJ,eAAe,CAACU,QAArB;AACI,+BACOJ,KADP;AAEID,QAAAA,SAAS,EAAEJ,aAAa,CAACK,KAAK,CAACD,SAAP,EAAkBE,MAAM,CAACI,OAAzB;AAF5B;;AAIJ,SAAKX,eAAe,CAACY,WAArB;AACI,+BACON,KADP;AAEID,QAAAA,SAAS,EAAEH,kBAAkB,CAACI,KAAK,CAACD,SAAP,EAAkBE,MAAM,CAACI,OAAzB;AAFjC;;AAIJ,SAAKX,eAAe,CAACa,oBAArB;AACI,+BACOP,KADP;AAEID,QAAAA,SAAS,EAAEC,KAAK,CAACD,SAAN,CACNS,MADM,CACCC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBT,MAAM,CAACI,OAAP,CAAeK,EAD5C;AAFf;;AAKJ;AACI,aAAOV,KAAP;AApBR;AAsBH,CAvBD","sourcesContent":["import CartActionTypes from './cart.type'\r\nimport { addItemToCart,removeItemFromCart } from './cart.util'\r\nconst INITIAL_STATE = {\r\n    hidden: true,\r\n    cartItems: []\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case CartActionTypes.TOGGLE_CART_HIDDEN:\r\n            return { ...state, hidden: !state.hidden }\r\n        case CartActionTypes.ADD_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: addItemToCart(state.cartItems, action.payload)\r\n            }\r\n        case CartActionTypes.REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: removeItemFromCart(state.cartItems, action.payload)\r\n            }\r\n        case CartActionTypes.CLEAR_ITEM_FROM_CART:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems\r\n                    .filter(cartItem => cartItem.id !== action.payload.id)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}