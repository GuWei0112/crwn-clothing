{"ast":null,"code":"import _defineProperty from \"D:\\\\React\\\\Udemy\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"D:\\\\React\\\\Udemy\\\\crwn-clothing\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\React\\\\Udemy\\\\crwn-clothing\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport FormInput from \"../form-input/forn-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\nimport \"./sign-up.style.scss\";\nexport default (() => {\n  const _useState = useState({\n    displayName: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const handleSubmit = async () => {\n    const displayName = state.displayName,\n          email = state.email,\n          password = state.password,\n          confirmPassword = state.confirmPassword;\n\n    if (password !== confirmPassword) {\n      alert(\"password do not match\");\n      return;\n    }\n\n    try {\n      const _ref = await auth.createUserWithEmailAndPassword(email, password),\n            user = _ref.user;\n\n      await createUserProfileDocument(user, {\n        displayName\n      });\n      setState({\n        displayName: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n    setState(prevState => {\n      return _objectSpread({}, prevState, {\n        [name]: value\n      });\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"I do not have a account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: () => handleSubmit(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: state.displayName,\n    label: \"DisplayName\",\n    onChange: e => handleChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: state.email,\n    label: \"Email\",\n    onChange: e => handleChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: state.password,\n    label: \"password\",\n    onChange: e => handleChange(e),\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: state.confirmPassword,\n    onChange: e => handleChange(e),\n    label: \"Confirm the password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"SIGN UP\")));\n});","map":{"version":3,"sources":["D:/React/Udemy/crwn-clothing/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","auth","createUserProfileDocument","displayName","email","password","confirmPassword","state","setState","handleSubmit","alert","createUserWithEmailAndPassword","user","error","console","handleChange","e","target","name","value","prevState"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport FormInput from \"../form-input/forn-input.component\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\n\r\nimport { auth, createUserProfileDocument } from \"../../firebase/firebase.utils\";\r\nimport \"./sign-up.style.scss\";\r\nexport default () => {\r\n  const [state, setState] = useState({\r\n    displayName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\"\r\n  });\r\n\r\n  const handleSubmit = async () => {\r\n    const { displayName, email, password, confirmPassword } = state;\r\n    if (password !== confirmPassword) {\r\n      alert(\"password do not match\");\r\n      return;\r\n    }\r\n    try {\r\n      const { user } = await auth.createUserWithEmailAndPassword(\r\n        email,\r\n        password\r\n      );\r\n      await createUserProfileDocument(user, { displayName });\r\n      setState({\r\n        displayName: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        [name]: value\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"sign-up\">\r\n      <h2 className=\"title\">I do not have a account</h2>\r\n      <span>Sign up with your email and password</span>\r\n      <form className=\"sign-up-form\" onSubmit={() => handleSubmit()}>\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"displayName\"\r\n          value={state.displayName}\r\n          label=\"DisplayName\"\r\n          onChange={e => handleChange(e)}\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={state.email}\r\n          label=\"Email\"\r\n          onChange={e => handleChange(e)}\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={state.password}\r\n          label=\"password\"\r\n          onChange={e => handleChange(e)}\r\n          required\r\n        />\r\n        <FormInput\r\n          type=\"password\"\r\n          name=\"confirmPassword\"\r\n          value={state.confirmPassword}\r\n          onChange={e => handleChange(e)}\r\n          label=\"Confirm the password\"\r\n          required\r\n        />\r\n        <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}